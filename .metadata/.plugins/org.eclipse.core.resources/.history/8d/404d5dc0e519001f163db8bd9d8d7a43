package com.berna.springboot.error.controllers;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.servlet.NoHandlerFoundException;

import com.berna.springboot.error.models.ErrorDTO;

@ControllerAdvice
public class HandlerExceptionController {

	@ExceptionHandler({ ArithmeticException.class }) // Mapeo el error acá
	public ResponseEntity<ErrorDTO> divisionByZero(Exception ex) {
		
		ErrorDTO err = new ErrorDTO();
		err.setDate(new Date());
		err.setError("No se puede dividir por cero");
		err.setMessage(ex.getMessage());
		err.setStatus(HttpStatus.INTERNAL_SERVER_ERROR.value());

		// return ResponseEntity.internalServerError().body(err);
		return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR.value()).body(err);
	}
	
	@ExceptionHandler({ NoHandlerFoundException.class })
	public ResponseEntity<ErrorDTO> notFoundEx(Exception ex){
		ErrorDTO err = new ErrorDTO();
		err.setDate(new Date());
		err.setError("No se encontró la página");
		err.setMessage(ex.getMessage());
		err.setStatus(HttpStatus.NOT_FOUND.value());
		
		return ResponseEntity.status(404).body(err);
	}
	
	@ExceptionHandler({ NumberFormatException.class })
	public Map<String,String> numberFormatException(Exception ex){
		Map<String,String> err = new HashMap<>();
		err.put("Date", new Date().toString());
		
		err.setDate(new Date());
		err.setError("No se encontró la página");
		err.setMessage(ex.getMessage());
		err.setStatus(HttpStatus.NOT_FOUND.value());
		
		return null;
	}
}
